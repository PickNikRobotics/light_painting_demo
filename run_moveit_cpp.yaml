/run_moveit_cpp:
  ros__parameters:
    moveit_controller_manager: moveit_fake_controller_manager/MoveItFakeControllerManager
    moveit_fake_controller_manager:
      controller_names:
      - joint_trajectory_controller
      joint_trajectory_controller:
        joints:
        - shoulder_pan_joint
        - shoulder_lift_joint
        - elbow_joint
        - wrist_1_joint
        - wrist_2_joint
        - wrist_3_joint
    moveit_manage_controllers: false
    ompl:
      planner_configs:
        BKPIECEkConfigDefault:
          border_fraction: 0.9
          failed_expansion_score_factor: 0.5
          min_valid_path_fraction: 0.5
          range: 0.0
          type: geometric::BKPIECE
        ESTkConfigDefault:
          goal_bias: 0.05
          range: 0.0
          type: geometric::EST
        KPIECEkConfigDefault:
          border_fraction: 0.9
          failed_expansion_score_factor: 0.5
          goal_bias: 0.05
          min_valid_path_fraction: 0.5
          range: 0.0
          type: geometric::KPIECE
        LBKPIECEkConfigDefault:
          border_fraction: 0.9
          min_valid_path_fraction: 0.5
          range: 0.0
          type: geometric::LBKPIECE
        PRMkConfigDefault:
          max_nearest_neighbors: 10
          type: geometric::PRM
        PRMstarkConfigDefault:
          type: geometric::PRMstar
        RRTConnectkConfigDefault:
          range: 0.0
          type: geometric::RRTConnect
        RRTkConfigDefault:
          goal_bias: 0.05
          range: 0.0
          type: geometric::RRT
        RRTstarkConfigDefault:
          delay_collision_checking: 1
          goal_bias: 0.05
          range: 0.0
          type: geometric::RRTstar
        SBLkConfigDefault:
          range: 0.0
          type: geometric::SBL
        TRRTkConfigDefault:
          frountierNodeRatio: 0.1
          frountier_threshold: 0.0
          goal_bias: 0.05
          init_temperature: 1.0e-05
          k_constant: 0.0
          max_states_failed: 10
          min_temperature: 1.0e-09
          range: 0.0
          temp_change_factor: 2.0
          type: geometric::TRRT
      planning_plugin: ompl_interface/OMPLPlanner
      request_adapters: default_planner_request_adapters/AddTimeOptimalParameterization
        default_planner_request_adapters/FixWorkspaceBounds default_planner_request_adapters/FixStartStateBounds
        default_planner_request_adapters/FixStartStateCollision default_planner_request_adapters/FixStartStatePathConstraints
      start_state_max_bounds_error: 0.1
      ur_manipulator:
        longest_valid_segment_fraction: 0.01
        planner_configs:
        - SBLkConfigDefault
        - ESTkConfigDefault
        - LBKPIECEkConfigDefault
        - BKPIECEkConfigDefault
        - KPIECEkConfigDefault
        - RRTkConfigDefault
        - RRTConnectkConfigDefault
        - RRTstarkConfigDefault
        - TRRTkConfigDefault
        - PRMkConfigDefault
        - PRMstarkConfigDefault
    plan_request_params:
      max_acceleration_scaling_factor: 1.0
      max_velocity_scaling_factor: 1.0
      planning_attempts: 10
      planning_pipeline: ompl
    planning_pipelines:
      pipeline_names:
      - ompl
    planning_scene_monitor_options:
      attached_collision_object_topic: /moveit_cpp/planning_scene_monitor
      joint_state_topic: /joint_states
      monitored_planning_scene_topic: /moveit_cpp/monitored_planning_scene
      name: planning_scene_monitor
      publish_planning_scene_topic: /moveit_cpp/publish_planning_scene
      robot_description: robot_description
      wait_for_initial_state_timeout: 10.0
    robot_description: '<?xml version="1.0" ?> <!-- ===================================================================================
      --> <!-- |    This document was autogenerated by xacro from /home/andy/ws_light_demo/install/ur_description/share/ur_description/urdf/ur.urdf.xacro
      | --> <!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 |
      --> <!-- ===================================================================================
      --> <robot name="ur"> <!-- Base UR robot series xacro macro.

      NOTE this is NOT a URDF. It cannot directly be loaded by consumers expecting
      a flattened ''.urdf'' file. See the top-level ''.xacro'' for that (but note
      that .xacro must still be processed by the xacro command).

      This file models the base kinematic chain of a UR robot, which then gets parameterised
      by various configuration files to convert it into a UR3(e), UR5(e), UR10(e)
      or UR16e.

      NOTE the default kinematic parameters (i.e., link lengths, frame locations,
      offsets, etc) do not correspond to any particular robot. They are defaults only.
      There WILL be non-zero offsets between the Forward Kinematics results in TF
      (i.e., robot_state_publisher) and the values reported by the Teach Pendant.

      For accurate (and robot-specific) transforms, the ''kinematics_parameters_file''
      parameter MUST point to a .yaml file containing the appropriate values for the
      targeted robot.

      If using the UniversalRobots/Universal_Robots_ROS_Driver, follow the steps described
      in the readme of that repository to extract the kinematic calibration from the
      controller and generate the required .yaml file.

      Main author of the migration to yaml configs Ludovic Delval.

      Contributors to previous versions (in no particular order)

      - Denis Stogl - Lovro Ivanov - Felix Messmer - Kelsey Hawkins - Wim Meeussen
      - Shaun Edwards - Nadia Hammoudeh Garcia - Dave Hershberger - G. vd. Hoorn -
      Philip Long - Dave Coleman - Miguel Prada - Mathias Luedtke - Marcel Schnirring
      - Felix von Drigalski - Felix Exner - Jimmy Da Silva - Ajit Krisshna N L - Muhammad
      Asif Rana --> <!-- NOTE the macro defined in this file is NOT part of the public
      API of this package. Users CANNOT rely on this file being available, or stored
      in this location. Nor can they rely on the existence of the macro. --> <ros2_control
      name="URPositionHardwareInterface" type="system"> <hardware> <plugin>fake_components/GenericSystem</plugin>
      <param name="fake_sensor_commands">False</param> <param name="state_following_offset">0.0</param>
      </hardware> <joint name="shoulder_pan_joint"> <command_interface name="position">
      <param name="min">{-2*pi}</param> <param name="max">{2*pi}</param> </command_interface>
      <command_interface name="velocity"> <param name="min">-3.15</param> <param name="max">3.15</param>
      </command_interface> <state_interface name="position"/> <state_interface name="velocity"/>
      <state_interface name="effort"/> </joint> <joint name="shoulder_lift_joint">
      <command_interface name="position"> <param name="min">{-2*pi}</param> <param
      name="max">{2*pi}</param> </command_interface> <command_interface name="velocity">
      <param name="min">-3.15</param> <param name="max">3.15</param> </command_interface>
      <state_interface name="position"/> <state_interface name="velocity"/> <state_interface
      name="effort"/> <param name="initial_position">-1.57</param> <!-- initial position
      for the FakeSystem --> </joint> <joint name="elbow_joint"> <command_interface
      name="position"> <param name="min">{-pi}</param> <param name="max">{pi}</param>
      </command_interface> <command_interface name="velocity"> <param name="min">-3.15</param>
      <param name="max">3.15</param> </command_interface> <state_interface name="position"/>
      <state_interface name="velocity"/> <state_interface name="effort"/> </joint>
      <joint name="wrist_1_joint"> <command_interface name="position"> <param name="min">{-2*pi}</param>
      <param name="max">{2*pi}</param> </command_interface> <command_interface name="velocity">
      <param name="min">-3.2</param> <param name="max">3.2</param> </command_interface>
      <state_interface name="position"/> <state_interface name="velocity"/> <state_interface
      name="effort"/> </joint> <joint name="wrist_2_joint"> <command_interface name="position">
      <param name="min">{-2*pi}</param> <param name="max">{2*pi}</param> </command_interface>
      <command_interface name="velocity"> <param name="min">-3.2</param> <param name="max">3.2</param>
      </command_interface> <state_interface name="position"/> <state_interface name="velocity"/>
      <state_interface name="effort"/> </joint> <joint name="wrist_3_joint"> <command_interface
      name="position"> <param name="min">{-2*pi}</param> <param name="max">{2*pi}</param>
      </command_interface> <command_interface name="velocity"> <param name="min">-3.2</param>
      <param name="max">3.2</param> </command_interface> <state_interface name="position"/>
      <state_interface name="velocity"/> <state_interface name="effort"/> </joint>
      <sensor name="tcp_fts_sensor"> <state_interface name="force.x"/> <state_interface
      name="force.y"/> <state_interface name="force.z"/> <state_interface name="torque.x"/>
      <state_interface name="torque.y"/> <state_interface name="torque.z"/> </sensor>
      <!-- NOTE The following are joints used only for testing with fake hardware
      and will change in the future --> <joint name="speed_scaling"> <state_interface
      name="speed_scaling_factor"/> <param name="initial_speed_scaling_factor">1</param>
      <command_interface name="speed_scaling_factor_cmd"/> <command_interface name="scaling_async_success"/>
      </joint> <joint name="gpio"> <command_interface name="standard_digital_output_cmd_0"/>
      <command_interface name="standard_digital_output_cmd_1"/> <command_interface
      name="standard_digital_output_cmd_2"/> <command_interface name="standard_digital_output_cmd_3"/>
      <command_interface name="standard_digital_output_cmd_4"/> <command_interface
      name="standard_digital_output_cmd_5"/> <command_interface name="standard_digital_output_cmd_6"/>
      <command_interface name="standard_digital_output_cmd_7"/> <command_interface
      name="standard_digital_output_cmd_8"/> <command_interface name="standard_digital_output_cmd_9"/>
      <command_interface name="standard_digital_output_cmd_10"/> <command_interface
      name="standard_digital_output_cmd_11"/> <command_interface name="standard_digital_output_cmd_12"/>
      <command_interface name="standard_digital_output_cmd_13"/> <command_interface
      name="standard_digital_output_cmd_14"/> <command_interface name="standard_digital_output_cmd_15"/>
      <command_interface name="standard_digital_output_cmd_16"/> <command_interface
      name="standard_digital_output_cmd_17"/> <command_interface name="standard_analog_output_cmd_0"/>
      <command_interface name="standard_analog_output_cmd_1"/> <command_interface
      name="io_async_success"/> <state_interface name="digital_output_0"/> <state_interface
      name="digital_output_1"/> <state_interface name="digital_output_2"/> <state_interface
      name="digital_output_3"/> <state_interface name="digital_output_4"/> <state_interface
      name="digital_output_5"/> <state_interface name="digital_output_6"/> <state_interface
      name="digital_output_7"/> <state_interface name="digital_output_8"/> <state_interface
      name="digital_output_9"/> <state_interface name="digital_output_10"/> <state_interface
      name="digital_output_11"/> <state_interface name="digital_output_12"/> <state_interface
      name="digital_output_13"/> <state_interface name="digital_output_14"/> <state_interface
      name="digital_output_15"/> <state_interface name="digital_output_16"/> <state_interface
      name="digital_output_17"/> <state_interface name="digital_input_0"/> <state_interface
      name="digital_input_1"/> <state_interface name="digital_input_2"/> <state_interface
      name="digital_input_3"/> <state_interface name="digital_input_4"/> <state_interface
      name="digital_input_5"/> <state_interface name="digital_input_6"/> <state_interface
      name="digital_input_7"/> <state_interface name="digital_input_8"/> <state_interface
      name="digital_input_9"/> <state_interface name="digital_input_10"/> <state_interface
      name="digital_input_11"/> <state_interface name="digital_input_12"/> <state_interface
      name="digital_input_13"/> <state_interface name="digital_input_14"/> <state_interface
      name="digital_input_15"/> <state_interface name="digital_input_16"/> <state_interface
      name="digital_input_17"/> <state_interface name="standard_analog_output_0"/>
      <state_interface name="standard_analog_output_1"/> <state_interface name="standard_analog_input_0"/>
      <state_interface name="standard_analog_input_1"/> <state_interface name="analog_io_type_0"/>
      <state_interface name="analog_io_type_1"/> <state_interface name="analog_io_type_2"/>
      <state_interface name="analog_io_type_3"/> <state_interface name="tool_mode"/>
      <state_interface name="tool_output_voltage"/> <state_interface name="tool_output_current"/>
      <state_interface name="tool_temperature"/> <state_interface name="tool_analog_input_0"/>
      <state_interface name="tool_analog_input_1"/> <state_interface name="tool_analog_input_type_0"/>
      <state_interface name="tool_analog_input_type_1"/> <state_interface name="robot_mode"/>
      <state_interface name="robot_status_bit_0"/> <state_interface name="robot_status_bit_1"/>
      <state_interface name="robot_status_bit_2"/> <state_interface name="robot_status_bit_3"/>
      <state_interface name="safety_mode"/> <state_interface name="safety_status_bit_0"/>
      <state_interface name="safety_status_bit_1"/> <state_interface name="safety_status_bit_2"/>
      <state_interface name="safety_status_bit_3"/> <state_interface name="safety_status_bit_4"/>
      <state_interface name="safety_status_bit_5"/> <state_interface name="safety_status_bit_6"/>
      <state_interface name="safety_status_bit_7"/> <state_interface name="safety_status_bit_8"/>
      <state_interface name="safety_status_bit_9"/> <state_interface name="safety_status_bit_10"/>
      </joint> </ros2_control> <!-- Add URDF transmission elements (for ros_control)
      --> <!--<xacro:ur_arm_transmission prefix="${prefix}" hw_interface="${transmission_hw_interface}"
      />--> <!-- Placeholder for ros2_control transmission which don''t yet exist
      --> <!-- links -  main serial chain --> <link name="base_link"/> <link name="base_link_inertia">
      <visual> <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/> <geometry> <mesh
      filename="package://ur_description/meshes/ur5e/visual/base.dae"/> </geometry>
      <material name="LightGrey"> <color rgba="0.7 0.7 0.7 1.0"/> </material> </visual>
      <collision> <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/> <geometry> <mesh
      filename="package://ur_description/meshes/ur5e/collision/base.stl"/> </geometry>
      </collision> <inertial> <mass value="4.0"/> <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.00443333156" ixy="0.0" ixz="0.0" iyy="0.00443333156" iyz="0.0"
      izz="0.0072"/> </inertial> </link> <link name="shoulder_link"> <visual> <origin
      rpy="0 0 3.141592653589793" xyz="0 0 0"/> <geometry> <mesh filename="package://ur_description/meshes/ur5e/visual/shoulder.dae"/>
      </geometry> <material name="LightGrey"> <color rgba="0.7 0.7 0.7 1.0"/> </material>
      </visual> <collision> <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/> <geometry>
      <mesh filename="package://ur_description/meshes/ur5e/collision/shoulder.stl"/>
      </geometry> </collision> <inertial> <mass value="3.7"/> <origin rpy="0 0 0"
      xyz="0 0 0"/> <inertia ixx="0.010267495893" ixy="0.0" ixz="0.0" iyy="0.010267495893"
      iyz="0.0" izz="0.00666"/> </inertial> </link> <link name="upper_arm_link"> <visual>
      <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.138"/> <geometry>
      <mesh filename="package://ur_description/meshes/ur5e/visual/upperarm.dae"/>
      </geometry> <material name="LightGrey"> <color rgba="0.7 0.7 0.7 1.0"/> </material>
      </visual> <collision> <origin rpy="1.5707963267948966 0 -1.5707963267948966"
      xyz="0 0 0.138"/> <geometry> <mesh filename="package://ur_description/meshes/ur5e/collision/upperarm.stl"/>
      </geometry> </collision> <inertial> <mass value="8.393"/> <origin rpy="0 1.5707963267948966
      0" xyz="-0.2125 0.0 0.138"/> <inertia ixx="0.1338857818623325" ixy="0.0" ixz="0.0"
      iyy="0.1338857818623325" iyz="0.0" izz="0.0151074"/> </inertial> </link> <link
      name="forearm_link"> <visual> <origin rpy="1.5707963267948966 0 -1.5707963267948966"
      xyz="0 0 0.007"/> <geometry> <mesh filename="package://ur_description/meshes/ur5e/visual/forearm.dae"/>
      </geometry> <material name="LightGrey"> <color rgba="0.7 0.7 0.7 1.0"/> </material>
      </visual> <collision> <origin rpy="1.5707963267948966 0 -1.5707963267948966"
      xyz="0 0 0.007"/> <geometry> <mesh filename="package://ur_description/meshes/ur5e/collision/forearm.stl"/>
      </geometry> </collision> <inertial> <mass value="2.275"/> <origin rpy="0 1.5707963267948966
      0" xyz="-0.1961 0.0 0.007"/> <inertia ixx="0.031209355099586295" ixy="0.0" ixz="0.0"
      iyy="0.031209355099586295" iyz="0.0" izz="0.004095"/> </inertial> </link> <link
      name="wrist_1_link"> <visual> <origin rpy="1.5707963267948966 0 0" xyz="0 0
      -0.127"/> <geometry> <mesh filename="package://ur_description/meshes/ur5e/visual/wrist1.dae"/>
      </geometry> <material name="LightGrey"> <color rgba="0.7 0.7 0.7 1.0"/> </material>
      </visual> <collision> <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.127"/>
      <geometry> <mesh filename="package://ur_description/meshes/ur5e/collision/wrist1.stl"/>
      </geometry> </collision> <inertial> <mass value="1.219"/> <origin rpy="0 0 0"
      xyz="0 0 0"/> <inertia ixx="0.0025598989760400002" ixy="0.0" ixz="0.0" iyy="0.0025598989760400002"
      iyz="0.0" izz="0.0021942"/> </inertial> </link> <link name="wrist_2_link"> <visual>
      <origin rpy="0 0 0" xyz="0 0 -0.0997"/> <geometry> <mesh filename="package://ur_description/meshes/ur5e/visual/wrist2.dae"/>
      </geometry> <material name="LightGrey"> <color rgba="0.7 0.7 0.7 1.0"/> </material>
      </visual> <collision> <origin rpy="0 0 0" xyz="0 0 -0.0997"/> <geometry> <mesh
      filename="package://ur_description/meshes/ur5e/collision/wrist2.stl"/> </geometry>
      </collision> <inertial> <mass value="1.219"/> <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0025598989760400002" ixy="0.0" ixz="0.0" iyy="0.0025598989760400002"
      iyz="0.0" izz="0.0021942"/> </inertial> </link> <link name="wrist_3_link"> <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.0989"/> <geometry> <mesh filename="package://ur_description/meshes/ur5e/visual/wrist3.dae"/>
      </geometry> <material name="LightGrey"> <color rgba="0.7 0.7 0.7 1.0"/> </material>
      </visual> <collision> <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.0989"/>
      <geometry> <mesh filename="package://ur_description/meshes/ur5e/collision/wrist3.stl"/>
      </geometry> </collision> <inertial> <mass value="0.1879"/> <origin rpy="0 0
      0" xyz="0.0 0.0 -0.0229"/> <inertia ixx="9.890410052167731e-05" ixy="0.0" ixz="0.0"
      iyy="9.890410052167731e-05" iyz="0.0" izz="0.0001321171875"/> </inertial> </link>
      <!-- joints - main serial chain --> <joint name="base_link-base_link_inertia"
      type="fixed"> <parent link="base_link"/> <child link="base_link_inertia"/> <!--
      ''base_link'' is REP-103 aligned (so X+ forward), while the internal frames
      of the robot/controller have X+ pointing backwards. Use the joint between ''base_link''
      and ''base_link_inertia'' (a dummy link/frame) to introduce the necessary rotation
      over Z (of pi rad). --> <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/> </joint>
      <joint name="shoulder_pan_joint" type="revolute"> <parent link="base_link_inertia"/>
      <child link="shoulder_link"/> <origin rpy="0 0 0" xyz="0 0 0.1625"/> <axis xyz="0
      0 1"/> <limit effort="150.0" lower="-6.283185307179586" upper="6.283185307179586"
      velocity="3.141592653589793"/> <safety_controller k_position="20" k_velocity="0.0"
      soft_lower_limit="-6.133185307179586" soft_upper_limit="6.133185307179586"/>
      <dynamics damping="0" friction="0"/> </joint> <joint name="shoulder_lift_joint"
      type="revolute"> <parent link="shoulder_link"/> <child link="upper_arm_link"/>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/> <axis xyz="0 0 1"/> <limit effort="150.0"
      lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793"/>
      <safety_controller k_position="20" k_velocity="0.0" soft_lower_limit="-6.133185307179586"
      soft_upper_limit="6.133185307179586"/> <dynamics damping="0" friction="0"/>
      </joint> <joint name="elbow_joint" type="revolute"> <parent link="upper_arm_link"/>
      <child link="forearm_link"/> <origin rpy="0 0 0" xyz="-0.425 0 0"/> <axis xyz="0
      0 1"/> <limit effort="150.0" lower="-3.141592653589793" upper="3.141592653589793"
      velocity="3.141592653589793"/> <safety_controller k_position="20" k_velocity="0.0"
      soft_lower_limit="-2.991592653589793" soft_upper_limit="2.991592653589793"/>
      <dynamics damping="0" friction="0"/> </joint> <joint name="wrist_1_joint" type="revolute">
      <parent link="forearm_link"/> <child link="wrist_1_link"/> <origin rpy="0 0
      0" xyz="-0.3922 0 0.1333"/> <axis xyz="0 0 1"/> <limit effort="28.0" lower="-6.283185307179586"
      upper="6.283185307179586" velocity="3.141592653589793"/> <safety_controller
      k_position="20" k_velocity="0.0" soft_lower_limit="-6.133185307179586" soft_upper_limit="6.133185307179586"/>
      <dynamics damping="0" friction="0"/> </joint> <joint name="wrist_2_joint" type="revolute">
      <parent link="wrist_1_link"/> <child link="wrist_2_link"/> <origin rpy="1.570796327
      0 0" xyz="0 -0.0997 -2.044881182297852e-11"/> <axis xyz="0 0 1"/> <limit effort="28.0"
      lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793"/>
      <safety_controller k_position="20" k_velocity="0.0" soft_lower_limit="-6.133185307179586"
      soft_upper_limit="6.133185307179586"/> <dynamics damping="0" friction="0"/>
      </joint> <joint name="wrist_3_joint" type="revolute"> <parent link="wrist_2_link"/>
      <child link="wrist_3_link"/> <origin rpy="1.570796326589793 3.141592653589793
      3.141592653589793" xyz="0 0.0996 -2.042830148012698e-11"/> <axis xyz="0 0 1"/>
      <limit effort="28.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793"/>
      <safety_controller k_position="20" k_velocity="0.0" soft_lower_limit="-6.133185307179586"
      soft_upper_limit="6.133185307179586"/> <dynamics damping="0" friction="0"/>
      </joint> <!-- ROS-Industrial ''base'' frame - base_link to UR ''Base'' Coordinates
      transform --> <link name="base"/> <joint name="base_link-base_fixed_joint" type="fixed">
      <!-- Note the rotation over Z of pi radians - as base_link is REP-103 aligned
      (i.e., has X+ forward, Y+ left and Z+ up), this is needed to correctly align
      ''base'' with the ''Base'' coordinate system of the UR controller. --> <origin
      rpy="0 0 3.141592653589793" xyz="0 0 0"/> <parent link="base_link"/> <child
      link="base"/> </joint> <!-- ROS-Industrial ''flange'' frame - attachment point
      for EEF models --> <link name="flange"/> <joint name="wrist_3-flange" type="fixed">
      <parent link="wrist_3_link"/> <child link="flange"/> <origin rpy="0 -1.5707963267948966
      -1.5707963267948966" xyz="0 0 0"/> </joint> <!-- ROS-Industrial ''tool0'' frame
      - all-zeros tool frame --> <link name="tool0"/> <joint name="flange-tool0" type="fixed">
      <!-- default toolframe - X+ left, Y+ up, Z+ front --> <origin rpy="1.5707963267948966
      0 1.5707963267948966" xyz="0 0 0"/> <parent link="flange"/> <child link="tool0"/>
      </joint> </robot>'
    robot_description_semantic: <?xml version="1.0" ?> <!-- ===================================================================================
      --> <!-- |    This document was autogenerated by xacro from /home/andy/ws_light_demo/install/ur_moveit_config/share/ur_moveit_config/srdf/ur.srdf.xacro
      | --> <!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 |
      --> <!-- ===================================================================================
      --> <robot name="ur"> <!--GROUPS - Representation of a set of joints and links.
      This can be useful for specifying DOF to plan for, defining arms, end effectors,
      etc--> <!--LINKS - When a link is specified, the parent joint of that link (if
      it exists) is automatically included--> <!--JOINTS - When a joint is specified,
      the child link of that joint (which will always exist) is automatically included-->
      <!--CHAINS - When a chain is specified, all the links along the chain (including
      endpoints) are included in the group. Additionally, all the joints that are
      parents to included links are also included. This means that joints along the
      chain and the parent joint of the base link are included in the group--> <!--SUBGROUPS
      - Groups can also be formed by referencing to already defined group names-->
      <group name="ur_manipulator"> <chain base_link="base_link" tip_link="tool0"/>
      </group> <!--GROUP STATES - Purpose - Define a named state for a particular
      group, in terms of joint values. This is useful to define states like 'folded
      arms'--> <group_state group="ur_manipulator" name="home"> <joint name="elbow_joint"
      value="0"/> <joint name="shoulder_lift_joint" value="-1.5707"/> <joint name="shoulder_pan_joint"
      value="0"/> <joint name="wrist_1_joint" value="0"/> <joint name="wrist_2_joint"
      value="0"/> <joint name="wrist_3_joint" value="0"/> </group_state> <group_state
      group="ur_manipulator" name="up"> <joint name="elbow_joint" value="0"/> <joint
      name="shoulder_lift_joint" value="-1.5707"/> <joint name="shoulder_pan_joint"
      value="0"/> <joint name="wrist_1_joint" value="-1.5707"/> <joint name="wrist_2_joint"
      value="0"/> <joint name="wrist_3_joint" value="0"/> </group_state> <group_state
      group="ur_manipulator" name="test_configuration"> <joint name="elbow_joint"
      value="1.4"/> <joint name="shoulder_lift_joint" value="-1.62"/> <joint name="shoulder_pan_joint"
      value="1.54"/> <joint name="wrist_1_joint" value="-1.2"/> <joint name="wrist_2_joint"
      value="-1.6"/> <joint name="wrist_3_joint" value="-0.11"/> </group_state> <!--END
      EFFECTOR - Purpose - Represent information about an end effector.--> <!--VIRTUAL
      JOINT - Purpose - this element defines a virtual joint between a robot link
      and an external frame of reference (considered fixed with respect to the robot)-->
      <virtual_joint child_link="base_link" name="fixed_base" parent_frame="world"
      type="fixed"/> <!--DISABLE COLLISIONS - By default it is assumed that any link
      of the robot could potentially come into collision with any other link in the
      robot. This tag disables collision checking between a specified pair of links.
      --> <disable_collisions link1="base_link" link2="base_link_inertia" reason="Adjacent"/>
      <disable_collisions link1="base_link_inertia" link2="shoulder_link" reason="Adjacent"/>
      <disable_collisions link1="tool0" link2="wrist_1_link" reason="Never"/> <disable_collisions
      link1="tool0" link2="wrist_2_link" reason="Never"/> <disable_collisions link1="tool0"
      link2="wrist_3_link" reason="Adjacent"/> <disable_collisions link1="forearm_link"
      link2="upper_arm_link" reason="Adjacent"/> <disable_collisions link1="forearm_link"
      link2="wrist_1_link" reason="Adjacent"/> <disable_collisions link1="shoulder_link"
      link2="upper_arm_link" reason="Adjacent"/> <disable_collisions link1="wrist_1_link"
      link2="wrist_2_link" reason="Adjacent"/> <disable_collisions link1="wrist_1_link"
      link2="wrist_3_link" reason="Never"/> <disable_collisions link1="wrist_2_link"
      link2="wrist_3_link" reason="Adjacent"/> </robot>
    trajectory_execution:
      allowed_execution_duration_scaling: 1.2
      allowed_goal_duration_margin: 0.5
      allowed_start_tolerance: 0.01
    ur_manipulator:
      kinematics_solver: kdl_kinematics_plugin/KDLKinematicsPlugin
      kinematics_solver_attempts: 3
      kinematics_solver_search_resolution: 0.005
      kinematics_solver_timeout: 0.005
    use_sim_time: false
